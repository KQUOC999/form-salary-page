{"version":3,"file":"static/js/402.52265f07.chunk.js","mappings":"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","sources":["routers/pages/form.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport Form from \"@rjsf/core\";\r\nimport validator from '@rjsf/validator-ajv8';\r\nimport * as Realm from 'realm-web';\r\n\r\nconst app = new Realm.App({ id: process.env.REACT_APP_REALM_ID });\r\nconst user = app.currentUser;\r\n\r\n\r\nconst MyForm = () => {\r\n\r\n    const [, setLoading]                                                                = useState(true);\r\n    const [jsonSchemaCalculateNetSalaryInput, setJsonSchemaCalculateNetSalaryInput]     = useState({});\r\n    const [jsonSchemaCalculateNetSalaryOutput, setJsonSchemaCalculateNetSalaryOutput]   = useState({});\r\n\r\n    const [result, setResult]                                                           = useState(null); \r\n    const [formDataInputChange, setFormDataInputChange]                                 = useState({});\r\n    const [ , setResponseArray]                                                         = useState([]);\r\n    const [, setIsLoggedIn] = useState(false);\r\n    const [ , setUser] = useState(app.currentUser);\r\n    const [role, setRole] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      checkUserRole(user);\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n  const checkUserRole = async (user) => {\r\n    try {\r\n      if (!user || !user.profile || !user.profile.email) {\r\n        throw new Error(\"User is not logged in or does not have an email.\");\r\n      }\r\n      const functionName = \"checkUserRole\";\r\n      const userProfile = await user.functions[functionName](user.profile.email);\r\n      if (userProfile.error) {\r\n        throw new Error(userProfile.error);\r\n      }\r\n      setRole(userProfile.role);\r\n\r\n      console.log(\"check role:\", userProfile.role)\r\n\r\n      setIsLoggedIn(true);\r\n    } catch (error) {\r\n      console.error(\"Failed to check user role:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n    const logout = async () => {\r\n        if (user) {\r\n          await user.logOut();\r\n          setUser(null);\r\n          setIsLoggedIn(false);\r\n          window.location.reload(true);\r\n        }\r\n      };\r\n\r\n   \r\n    const fetchDataNetSalaryModule = useCallback(async () => {\r\n        try {\r\n            if(role === 'admin' || role === 'user'){\r\n                const profile = user.profile;\r\n            if (profile) {\r\n                // Lấy owner_id và owner_name từ profile\r\n                const owner_id = profile.id;\r\n                const owner_name = profile.email;\r\n\r\n                // In ra console để kiểm tra\r\n                console.log('Owner ID:', owner_id);\r\n                console.log('Owner Name:', owner_name);\r\n            }\r\n                const functionName = \"salaryFormModule\";\r\n                const response = await user?.callFunction(functionName);\r\n                \r\n                console.log(\"role: \", role)\r\n                console.log(\"response: \", response)\r\n\r\n                setJsonSchemaCalculateNetSalaryInput(response?.public?.input?.jsonSchema);\r\n                setJsonSchemaCalculateNetSalaryOutput(response?.public?.output?.jsonData);\r\n                setLoading(false);\r\n            }\r\n            \r\n            \r\n        } catch (error) { \r\n            console.error('Error fetching data:', error);\r\n            setLoading(false);\r\n        }\r\n    }, [role]);\r\n\r\n    useEffect(() => {\r\n        fetchDataNetSalaryModule();\r\n    }, [fetchDataNetSalaryModule]);\r\n\r\n    const updateBasicSalary = useCallback((part) => {\r\n        let basicSalary = 0;\r\n        switch (part) {\r\n            case \"Teaching Department\": \r\n                basicSalary = 8000000;\r\n                break;\r\n            case \"Technical Department\":\r\n                basicSalary = 9000000;\r\n                break;\r\n            case \"HR Department\":\r\n                basicSalary = 10000000;\r\n                break;\r\n            case \"Production Department\":\r\n                basicSalary = 11000000;\r\n                break;\r\n            case \"Supervision Department\":\r\n                basicSalary = 15000000;\r\n                break;\r\n            case \"R&D\":\r\n                basicSalary = 20000000;\r\n                break;\r\n            case \"CFO\":\r\n                basicSalary = 30000000;\r\n                break;\r\n            case \"CEO\":\r\n                basicSalary = 40000000;\r\n                break;\r\n            default:\r\n                basicSalary = 0;\r\n        }\r\n\r\n        setFormDataInputChange(prevData => {\r\n            const currentBasicSalary = prevData?.[\"Thu nhập chịu thuế Input\"]?.Part?.[\"Lương_cơ_bản\"];\r\n            if (currentBasicSalary !== basicSalary) {\r\n                return {\r\n                    ...prevData,\r\n                    \"Thu nhập chịu thuế Input\": {\r\n                        ...prevData[\"Thu nhập chịu thuế Input\"],\r\n                        Part: {\r\n                            ...prevData[\"Thu nhập chịu thuế Input\"].Part,\r\n                            \"Lương_cơ_bản\": basicSalary\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n            return prevData;\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const part = formDataInputChange?.[\"Thu nhập chịu thuế Input\"]?.Part?.Part;\r\n        if (part) {\r\n            updateBasicSalary(part);\r\n        }\r\n    }, [formDataInputChange, updateBasicSalary]);\r\n\r\n\r\n    \r\n\r\n    const handleInputChange = (e) => {\r\n        if (role === 'admin'){\r\n            setFormDataInputChange(e.formData);\r\n        }\r\n    };\r\n    \r\n    const handleSubmit1 = async (form) => {\r\n        try {\r\n            // Kiểm tra xem formData có tồn tại không\r\n            if (form) {\r\n                const IncomeTaxInfo         = form.formData?.[\"Thu nhập chịu thuế Input\"]?.[\"Thông_tin_nhân_viên\"];\r\n                const IncomeTaxPart         = form.formData?.[\"Thu nhập chịu thuế Input\"]?.Part;\r\n                const IncomekpiData         = form.formData?.[\"Thu nhập chịu thuế Input\"]?.Plan?.[\"Chỉ_tiêu\"];\r\n                const IncomeBlance          = form.formData?.[\"Thu nhập chịu thuế Input\"]?.Budget_performance;\r\n                const IncomeBonus           = form.formData?.[\"Thu nhập chịu thuế Input\"]?.Bonus;\r\n                const PersonalIncomeTax     = form.formData?.[\"Thuế TNCN Input\"]?.input;\r\n                const LOAN                  = form.formData?.[\"LOAN_Tiền ứng trước Input\"]?.input;\r\n                const ExpenseReimbursement  = form.formData?.[\"EXPENSE REIMBURSEMENT - KHẤU TRỪ Input\"]?.input;\r\n                const InsuranceType         = form.formData?.[\"BẢO HIỂM\"]?.Input\r\n                \r\n\r\n            //    console.log(\"Thông tin Insurance   : \", InsuranceType);\r\n\r\n                //Thông tin Lương cơ bản\r\n                    const dataToSendIncome = {\r\n                        user: user.id,\r\n                        Name: IncomeTaxInfo?.Name,\r\n                        ID: IncomeTaxInfo?.ID,\r\n                        Part: IncomeTaxPart?.Part,\r\n                        BasicSalary: IncomeTaxPart?.[\"Lương_cơ_bản\"],\r\n                        KPIs: IncomekpiData?.map(item => ({\r\n                            NameTaget: item?.[\"Tên_chỉ_tiêu\"],\r\n                            Money: item?.[\"Số_tiền\"]\r\n                        })) || [],// Trả về một mảng rỗng nếu IncomekpiData không tồn tại hoặc là null/undefined\r\n                        Balance: IncomeBlance,\r\n                        Bonus: IncomeBonus\r\n                    };\r\n\r\n                //Thông tin Thuế thu nhập cá nhân\r\n                    const dataToSendPersonalIncomeTax = {\r\n                        Date: PersonalIncomeTax.Datetime,\r\n                        FullName: PersonalIncomeTax?.[\"Tên_nhân_viên\"],\r\n                        ID: PersonalIncomeTax?.ID,\r\n                        SalaryNoTax: PersonalIncomeTax?.[\"Lương_chưa_thuế\"],\r\n                        Level: PersonalIncomeTax?.[\"Hệ_số\"],\r\n                        ReduceYourSelf: PersonalIncomeTax?.[\"Giảm trừ bản thân\"],\r\n                        InsuranceFees: PersonalIncomeTax?.[\"Bảo_hiểm\"]\r\n                    };\r\n\r\n\r\n                //Thông tin LOAN - Tiền ứng trước\r\n                    const dataToSendLOAN  = {\r\n                        LoanRegistrationTime: LOAN.Datetime,\r\n                        ExpriedDay          : LOAN.Expired_days,\r\n                        LoanType            : LOAN.Loan_type,\r\n                        StaffName           : LOAN.Name,\r\n                        RefundDay           : LOAN.Refund_date,\r\n                        Money               : LOAN.Value\r\n                    };    \r\n\r\n                //Thông tin EXPENSE REIMBURSEMENT - KHẤU TRỪ Input\r\n                    const dataToSendExpenseReibursement = {\r\n                        NotEnoughTargetStudent  : {\r\n                            StudentNumber       : ExpenseReimbursement?.[\"Số_học_viên_không_đủ_chỉ_tiêu \"]?.[\"Số_lượng_học_viên\"],\r\n                            StudentMoney        : ExpenseReimbursement?.[\"Số_học_viên_không_đủ_chỉ_tiêu \"]?.[\"Số_tiền_HV\"]\r\n                        },\r\n                        DefautFee               : ExpenseReimbursement?.[\"Default fee\"]?.[\"Số_tiền_Def\"],\r\n                        Outsourcing             : ExpenseReimbursement?.Outsourcing?.[\"Số_tiền_Outs\"],\r\n                        UnauthorizedDayoff      : {\r\n                            DayNumber           : ExpenseReimbursement?.[\"Số_ngày_nghỉ_không_phép\"]?.[\"Số_ngày\"],\r\n                            MoneyOfDayoff       : ExpenseReimbursement?.[\"Số_ngày_nghỉ_không_phép\"]?.[\"Số_tiền_trên_một_ngày_nghỉ\"]\r\n                        },\r\n                        LackTargets: ExpenseReimbursement?.Thiếu_chỉ_tiêu?.map(item => ({\r\n                            TargetName: item?.[\"Tên_chỉ_tiêu\"],\r\n                            RegisterName: item?.[\"Người_đăng_ký\"],\r\n                            CompensationMoney: item?.[\"Số_tiền_bồi_thường\"]\r\n                        })) || []\r\n                    };\r\n\r\n                //Thông tin Insurance - Bảo hiểm\r\n                    const dataToSendInsurance = {\r\n                        BHTN            : InsuranceType?.BHTN,\r\n                        BHXH            : InsuranceType?.BHXH,\r\n                        BHYT            : InsuranceType?.BHYT,\r\n                        SalaryInsurance : InsuranceType?.[\"Lương_đóng_bảo_hiểm\"]\r\n                    }\r\n\r\n                //   console.log(\"Thông tin nhân viên: \", dataToSendIncome,dataToSendPersonalIncomeTax, dataToSendLOAN,dataToSendExpenseReibursement,dataToSendInsurance);\r\n\r\n            // Gộp mảng thông tin\r\n                const dataTotalToSend = {\r\n                    Người_dùng              : user.id,\r\n                    Thu_nhập_chịu_thuế      : dataToSendIncome,\r\n                    Thuế_thu_nhập_cá_nhân   : dataToSendPersonalIncomeTax,\r\n                    LOAN_Tiền_ứng_trước     : dataToSendLOAN,\r\n                    Khấu_trừ                : dataToSendExpenseReibursement,\r\n                    Bảo_hiểm                : dataToSendInsurance\r\n                }  \r\n            \r\n\r\n            //Gửi đối tượng về server\r\n            const sendData = await app.currentUser?.callFunction(\"receivedData1\", dataTotalToSend);\r\n\r\n\r\n            //code trả về kết quả tính toán đưa vào form output:\r\n            const calculatedResult = await calculateNetSalary(form.formData);\r\n            setResult(calculatedResult);\r\n\r\n            // Cập nhật kết quả\r\n            fetchDataNetSalaryModule();\r\n\r\n            return sendData;\r\n\r\n            } else {\r\n                console.error('Form data is missing or invalid.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    };\r\n\r\n//Hàm tính toán dữ liệu trả về Output   \r\n    const calculateNetSalary = async () => {\r\n\r\n        //Test come code....///////////////////\r\n            const functionName = \"calculateNetSalary\";\r\n            const response     =  await user?.callFunction(functionName);\r\n\r\n            // Kiểm tra xem response có phải là một mảng không\r\n            if (Array.isArray(response) && response.length > 0) {\r\n                // Lấy giá trị từ phản hồi\r\n                const TotalsalarywithouttaxArray        = response.map(res => res.public?.output?.calculation?.[\"Total_salary_without_tax\"]);\r\n                const PersonalIncomeTaxArray            = response.map(res => res.public?.output?.calculation?.[\"Thuế_thu_nhập_cá_nhân\"]);\r\n                const LOANArray                         = response.map(res => res.public?.output?.calculation?.[\"LOAN_Tiền_ứng_trước\"]);\r\n                const ExpenseReimbursementArray         = response.map(res => res.public?.output?.calculation?.[\"Khấu_trừ\"]);\r\n                const InsuranceSalaryArray              = response.map(res => res.public?.output?.calculation?.[\"Lương_đóng_bảo_hiểm\"]?.[\"Lương_đóng_bảo_hiểm\"]);\r\n                const SocialInsuranceArray              = response.map(res => res.public?.output?.calculation?.[\"Lương_đóng_bảo_hiểm\"]?.BHXH);\r\n                const AccidentInsuranceArray            = response.map(res => res.public?.output?.calculation?.[\"Lương_đóng_bảo_hiểm\"]?.BHTN);\r\n                const HealthInsuranceArray              = response.map(res => res.public?.output?.calculation?.[\"Lương_đóng_bảo_hiểm\"]?.BHYT);\r\n                const InsuranceArray                    = response.map(res => res.public?.output?.calculation?.[\"BẢO HIỂM\"]);\r\n                const NetsalaryArray                    = response.map(res => res.public?.output?.calculation?.[\"Lương_thực_lãnh\"]);\r\n\r\n                // Cập nhật giá trị mới nhất từ phản hồi\r\n                const latestTotalsalarywithouttaxArray  = TotalsalarywithouttaxArray[TotalsalarywithouttaxArray.length - 1];\r\n                const latestPersonalIncomeTaxArray      = PersonalIncomeTaxArray[PersonalIncomeTaxArray.length - 1];\r\n                const latestLOANArray                   = LOANArray[LOANArray.length - 1];\r\n                const latestExpenseReimbursementArray   = ExpenseReimbursementArray[ExpenseReimbursementArray.length - 1];\r\n                const latestInsuranceSalaryArray        = InsuranceSalaryArray[InsuranceSalaryArray.length - 1];\r\n                const latestSocialInsuranceArray        = SocialInsuranceArray[SocialInsuranceArray.length - 1];\r\n                const latestAccidentInsuranceArray      = AccidentInsuranceArray[AccidentInsuranceArray.length - 1];\r\n                const latestHealthInsuranceArray        = HealthInsuranceArray[HealthInsuranceArray.length - 1];\r\n                const latestInsuranceArray              = InsuranceArray[InsuranceArray.length - 1];\r\n                const latestNetsalaryArray              = NetsalaryArray[NetsalaryArray.length - 1];\r\n\r\n                if (latestTotalsalarywithouttaxArray    !== undefined || \r\n                    latestPersonalIncomeTaxArray        !== undefined || \r\n                    latestLOANArray                     !== undefined ||\r\n                    latestExpenseReimbursementArray     !== undefined ||\r\n                    latestInsuranceSalaryArray          !== undefined ||\r\n                    latestSocialInsuranceArray          !== undefined ||\r\n                    latestAccidentInsuranceArray        !== undefined ||\r\n                    latestHealthInsuranceArray          !== undefined ||\r\n                    latestInsuranceArray                !== undefined ||\r\n                    latestNetsalaryArray                !== undefined) {\r\n\r\n                    // Thêm giá trị abc vào mảng state\r\n                    setResponseArray(prevArray => Array.isArray(prevArray) ? [...prevArray, latestTotalsalarywithouttaxArray]   : [latestTotalsalarywithouttaxArray]);\r\n                    setResponseArray(prevArray => Array.isArray(prevArray) ? [...prevArray, latestPersonalIncomeTaxArray]       : [latestPersonalIncomeTaxArray]);\r\n                    setResponseArray(prevArray => Array.isArray(prevArray) ? [...prevArray, latestLOANArray]                    : [latestLOANArray]);\r\n                    setResponseArray(prevArray => Array.isArray(prevArray) ? [...prevArray, latestExpenseReimbursementArray]    : [latestExpenseReimbursementArray]);\r\n                    setResponseArray(prevArray => Array.isArray(prevArray) ? [...prevArray, latestInsuranceSalaryArray]         : [latestInsuranceSalaryArray]);\r\n                    setResponseArray(prevArray => Array.isArray(prevArray) ? [...prevArray, latestSocialInsuranceArray]         : [latestSocialInsuranceArray]);\r\n                    setResponseArray(prevArray => Array.isArray(prevArray) ? [...prevArray, latestAccidentInsuranceArray]       : [latestAccidentInsuranceArray]);\r\n                    setResponseArray(prevArray => Array.isArray(prevArray) ? [...prevArray, latestHealthInsuranceArray]         : [latestHealthInsuranceArray]);\r\n                    setResponseArray(prevArray => Array.isArray(prevArray) ? [...prevArray, latestInsuranceArray]               : [latestInsuranceArray]);\r\n                    setResponseArray(prevArray => Array.isArray(prevArray) ? [...prevArray, latestNetsalaryArray]               : [latestNetsalaryArray])\r\n\r\n                // Tạo form output để hiện thị kết quả\r\n                    const outputCalculation = {\r\n                        \"Salary_no_tax\": {\r\n                            \"Total_salary\": latestTotalsalarywithouttaxArray\r\n                        },\r\n                        \"Thuế_TNCN\": {\r\n                            \"Thuế_TNCN\": latestPersonalIncomeTaxArray\r\n                        },\r\n                        \"LOAN_Tiền ứng trước\": {\r\n                            \"Loan_amount\": latestLOANArray\r\n                        },\r\n                        \"EXPENSE REIMBURSEMENT - KHẤU TRỪ\": {\r\n                            \"Expense\": latestExpenseReimbursementArray\r\n                        },\r\n                        \"Lương đóng bảo hiểm\": {\r\n                            \"BHXH\": latestSocialInsuranceArray,\r\n                            \"BHTN\": latestAccidentInsuranceArray,\r\n                            \"BHYT\": latestHealthInsuranceArray,\r\n                            \"Lương_đóng_bảo_hiểm\": latestInsuranceSalaryArray\r\n                        },\r\n                        \"BẢO HIỂM\": {\r\n                            \"Thành_tiền_BH\": latestInsuranceArray\r\n                        },\r\n                        \"LƯƠNG THỰC LÃNH\": latestNetsalaryArray\r\n                    };\r\n\r\n                // Trả về kết quả tính toán\r\n                return outputCalculation;\r\n\r\n                } else {\r\n                    console.error(\"Không tìm thấy giá trị trong phản hồi.\");\r\n                }\r\n            } else {\r\n                console.error(\"Phản hồi không phải là một mảng hoặc rỗng.\");\r\n            }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {user? (\r\n                <div className=\"flex justify-center\">\r\n                    <button onClick={logout}>Logout</button>\r\n                    <p>Role: {role}</p>\r\n                    {role === 'admin' ? <div>Admin Content</div> : <div>Access Denied</div>}\r\n                    {jsonSchemaCalculateNetSalaryInput ? (\r\n                        <Form \r\n                            schema={jsonSchemaCalculateNetSalaryInput}\r\n                            validator={validator}\r\n                            formData={formDataInputChange}\r\n                            onSubmit={handleSubmit1}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    ) : (\r\n                        <div>Không có jsonSchemaCalculateNetSalaryInput</div>\r\n                    )}\r\n                    {jsonSchemaCalculateNetSalaryOutput ? (\r\n                        <Form \r\n                            schema={jsonSchemaCalculateNetSalaryOutput}\r\n                            validator={validator}\r\n                            disabled={true} \r\n                            formData={result}\r\n                            uiSchema={{\r\n                                \"ui:submitButtonOptions\": {\r\n                                    \"norender\": true \r\n                                }\r\n                            }}\r\n                        />\r\n                    ) : (\r\n                        <div>Không có jsonSchemaCalculateNetSalaryOutput</div>\r\n                    )}\r\n                </div>\r\n            ) : (\r\n                <div className=\"flex items-center justify-center h-screen\">\r\n                    <div className=\"text-gray-600 text-lg\">Please log in to view this content.</div>\r\n                    \r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MyForm;"],"names":["app","Realm","id","process","user","currentUser","MyForm","setLoading","useState","jsonSchemaCalculateNetSalaryInput","setJsonSchemaCalculateNetSalaryInput","jsonSchemaCalculateNetSalaryOutput","setJsonSchemaCalculateNetSalaryOutput","result","setResult","formDataInputChange","setFormDataInputChange","setResponseArray","setIsLoggedIn","setUser","role","setRole","useEffect","checkUserRole","async","profile","email","Error","functionName","userProfile","functions","error","console","log","fetchDataNetSalaryModule","useCallback","_response$public","_response$public$inpu","_response$public2","_response$public2$out","owner_id","owner_name","response","callFunction","public","input","jsonSchema","output","jsonData","updateBasicSalary","part","basicSalary","prevData","_prevData$ThuNhậpCh","_prevData$ThuNhậpCh$P","Part","_formDataInputChange$","_formDataInputChange$2","calculateNetSalary","Array","isArray","length","TotalsalarywithouttaxArray","map","res","_res$public","_res$public$output","_res$public$output$ca","calculation","PersonalIncomeTaxArray","_res$public2","_res$public2$output","_res$public2$output$c","LOANArray","_res$public3","_res$public3$output","_res$public3$output$c","ExpenseReimbursementArray","_res$public4","_res$public4$output","_res$public4$output$c","InsuranceSalaryArray","_res$public5","_res$public5$output","_res$public5$output$c","_res$public5$output$c2","SocialInsuranceArray","_res$public6","_res$public6$output","_res$public6$output$c","_res$public6$output$c2","BHXH","AccidentInsuranceArray","_res$public7","_res$public7$output","_res$public7$output$c","_res$public7$output$c2","BHTN","HealthInsuranceArray","_res$public8","_res$public8$output","_res$public8$output$c","_res$public8$output$c2","BHYT","InsuranceArray","_res$public9","_res$public9$output","_res$public9$output$c","NetsalaryArray","_res$public10","_res$public10$output","_res$public10$output$","latestTotalsalarywithouttaxArray","latestPersonalIncomeTaxArray","latestLOANArray","latestExpenseReimbursementArray","latestInsuranceSalaryArray","latestSocialInsuranceArray","latestAccidentInsuranceArray","latestHealthInsuranceArray","latestInsuranceArray","latestNetsalaryArray","undefined","prevArray","_jsx","_Fragment","children","_jsxs","className","onClick","logOut","window","location","reload","Form","schema","validator","formData","onSubmit","form","_form$formData","_form$formData$ThuNh","_form$formData2","_form$formData2$ThuN","_form$formData3","_form$formData3$ThuN","_form$formData3$ThuN$","_form$formData4","_form$formData4$ThuN","_form$formData5","_form$formData5$ThuN","_form$formData6","_form$formData6$Thuế","_form$formData7","_form$formData7$LOAN_","_form$formData8","_form$formData8$EXPEN","_form$formData9","_form$formData9$BẢOH","_ExpenseReimbursement","_ExpenseReimbursement2","_ExpenseReimbursement3","_ExpenseReimbursement4","_ExpenseReimbursement5","_ExpenseReimbursement6","_ExpenseReimbursement7","_app$currentUser","IncomeTaxInfo","IncomeTaxPart","IncomekpiData","Plan","IncomeBlance","Budget_performance","IncomeBonus","Bonus","PersonalIncomeTax","LOAN","ExpenseReimbursement","InsuranceType","Input","dataToSendIncome","Name","ID","BasicSalary","KPIs","item","NameTaget","Money","Balance","dataToSendPersonalIncomeTax","Date","Datetime","FullName","SalaryNoTax","Level","ReduceYourSelf","InsuranceFees","dataToSendLOAN","LoanRegistrationTime","ExpriedDay","Expired_days","LoanType","Loan_type","StaffName","RefundDay","Refund_date","Value","dataToSendExpenseReibursement","NotEnoughTargetStudent","StudentNumber","StudentMoney","DefautFee","Outsourcing","UnauthorizedDayoff","DayNumber","MoneyOfDayoff","LackTargets","Thiếu_chỉ_tiêu","TargetName","RegisterName","CompensationMoney","dataToSendInsurance","SalaryInsurance","dataTotalToSend","Người_dùng","Thu_nhập_chịu_thuế","Thuế_thu_nhập_cá_nhân","LOAN_Tiền_ứng_trước","Khấu_trừ","Bảo_hiểm","sendData","calculatedResult","onChange","e","disabled","uiSchema"],"sourceRoot":""}